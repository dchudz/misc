setwd(Sys.getenv("GITHUB_PATH"))
setwd("./misc/stan models/increasing by chi square increments/")
source("data generation function.R")
runif(1)
runif(1)
runif(1)
runif(1)
generate_data_mean_var <- function(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq) {
k_0 = sigma_mu_N_sq / (2 * mean_mu_N)
s = mean_mu_N / k_0
generate_data(k_0, s, N, sigma_0_sq)
}
generate_data_mean_var(10, 10, 20, 1)
fake_data <- generate_data_mean_var(10, 10, 20, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
library("ggplot2")
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(10, 10, 20, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(100, 10, 20, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(1000, 10, 20, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(1000, 1000, 20, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(1000, 1000, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(1000, 1000, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(1000, 1000, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(10, 1000, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(10, 10, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(10, 1, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(10, .001, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
generate_data_mean_var <- function(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq) {
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
fake_data <- generate_data_mean_var(10, .001, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
fake_data <- generate_data_mean_var(10, 10, 200, 1)
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
fake_data_plot
?apply
fake_data
fake_data[-1]
apply(1:10, 1, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq))
?apply
?apply
sapply(1:10, 1, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq))
sapply(1:10, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq))
mean_mu_N = 10
sigma_mu_N_sq = 10,
N = 20
sigma_0_sq = 1
sapply(1:10, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq))
sigma_mu_N_sq = 10
N = 20
sigma_0_sq = 1
sapply(1:10, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq))
sapply(1:10, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq)$mu[N])
sapply(1:1000, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq)$mu[N])
samples <- sapply(1:1000, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq)$mu[N])
mean(samples)
var(samples)
mean_mu_N <- 20
samples <- sapply(1:1000, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq)$mu[N])
mean(samples)
var(samples)
generate_data_including_hyperparameters <- function(N, sigma_0_sq) {
mean_mu_N <- runif(1)*100
sigma_mu_N <- runif(1)*mean_mu_N*2
sigma_mu_N_sq <- sigma_mu_N**2
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
generate_data_including_hyperparameters <- function(N) {
mean_mu_N <- runif(1)*100
sigma_0_sq <- runif(1)*100
sigma_mu_N <- runif(1)*mean_mu_N*2
sigma_mu_N_sq <- sigma_mu_N**2
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
generate_data_including_hyperparameters(10)
plot_fake_data <- function(fake_data) {
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
print(fake_data_plot)
}
fake_data <- generate_data_mean_var(10, 10, 200, 1)
plot_fake_data
plot_fake_data <- function(fake_data) {
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
print(fake_data)
}
plot_fake_data <- function(fake_data) {
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
print(fake_data_plot)
}
plot_fake_data()
plot_fake_data(fake_data)
plot_fake_data(generate_data_including_hyperparameters(10))
plot_fake_data(generate_data_including_hyperparameters(10))
plot_fake_data(generate_data_including_hyperparameters(20))
fake_data <- generate_data_mean_var(10, 10, 200, 1)
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
generate_data_including_hyperparameters <- function(N) {
mean_mu_N <- runif(1)*100
sigma_mu_N <- runif(1)*mean_mu_N
sigma_0_sq <- runif(1)*100
sigma_mu_N_sq <- sigma_mu_N**2
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
generate_data_including_hyperparameters <- function(N) {
mean_mu_N <- runif(1)*1000
sigma_mu_N <- runif(1)*mean_mu_N
sigma_0_sq <- runif(1)*100
sigma_mu_N_sq <- sigma_mu_N**2
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
a <- print(4)
a
print(a <- 4)
generate_data_including_hyperparameters <- function(N) {
print(mean_mu_N <- runif(1)*1000)
print(sigma_mu_N <- runif(1)*mean_mu_N)
print(sigma_mu_N_sq <- sigma_mu_N**2)
sigma_0 <- runif(1)*1000
sigma_0_sq <- sigma_0**2
print(mean_mu_N)
print(sigma_mu_N)
print(sigma)
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
plot_fake_data(generate_data_including_hyperparameters(20))
generate_data_including_hyperparameters <- function(N) {
print(mean_mu_N <- runif(1)*1000)
print(sigma_mu_N <- runif(1)*mean_mu_N)
print(sigma_mu_N_sq <- sigma_mu_N**2)
sigma_0 <- runif(1)*1000
sigma_0_sq <- sigma_0**2
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
generate_data_including_hyperparameters <- function(N) {
print(mean_mu_N <- runif(1)*1000)
print(sigma_mu_N <- runif(1)*mean_mu_N)
print(sigma_0 <- runif(1)*1000)
sigma_mu_N_sq <- sigma_mu_N**2
sigma_0_sq <- sigma_0**2
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
generate_data_including_hyperparameters <- function(N) {
print(mean_mu_N <- runif(1)*1000)
print(sigma_mu_N <- runif(1)*mean_mu_N)
print(sigma_0 <- runif(1)*100)
sigma_mu_N_sq <- sigma_mu_N**2
sigma_0_sq <- sigma_0**2
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
# Some code that looks into whether our fake data generation is working right:
plot_fake_data <- function(fake_data) {
fake_data_plot <- ggplot() + scale_color_discrete("") +
geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu")) +
geom_point(data=fake_data, mapping=aes(x=t,y=y,color="y"))
print(fake_data_plot)
}
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
samples <- sapply(1:10, function(x) {
fake_data <- generate_data_including_hyperparameters(20)
fake_data$sample_number <- x
})
samples
require(plyr)
samples <- ldply(1:10, function(x) {
fake_data <- generate_data_including_hyperparameters(20)
fake_data$sample_number <- x
fake_data
})
View(fake_data)
View(samples)
ggplot() + geom_line(data=fake_data, mapping=aes(x=t,y=mu, color="mu", group=sample_number)
)
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
require(plyr)
samples <- ldply(1:100, function(x) {
fake_data <- generate_data_including_hyperparameters(20)
fake_data$sample_number <- x
fake_data
})
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
require(plyr)
samples <- ldply(1:20, function(x) {
fake_data <- generate_data_including_hyperparameters(20)
fake_data$sample_number <- x
fake_data
})
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
require(plyr)
samples <- ldply(1:20, function(x) {
fake_data <- generate_data_including_hyperparameters(50)
fake_data$sample_number <- x
fake_data
})
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
samples <- ldply(1:20, function(x) {
fake_data <- generate_data_including_hyperparameters(50)
fake_data$sample_number <- x
fake_data
})
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
plot_fake_data(generate_data_including_hyperparameters(20))
require(plyr)
require(plyr)
require(ggplot2)
setwd(Sys.getenv("GITHUB_PATH"))
setwd("./misc/stan models/increasing by chi square increments/")
source("data generation function.R")
library("ggplot2")
# "generate_data" generates fake data according to this model (which is the same as the stan model I fit it to):
#
# For i in 1:N
#
#   mu_i ~ mu_{i-1} + s*chi_square(k_0/N)   (mu_0 = 0)
#   y_y ~ N(mu_i, sqrt(sigma_0_sq*N))
#
generate_data <- function(k_0, s, N, sigma_0_sq) {
mu <- s*cumsum(rchisq(N, k_0/N))
y <- mu + rnorm(N, sd=sqrt(sigma_0_sq*N))
t <- seq(1/N,1,1/N)
data.frame(t=t, mu=mu, y=y)
}
# E [ mu_N ]  = sum(E[ s*rchisq(k_0/N) ])
#             = s * chi_squared(k_0)
#             = s * k_0
#
# Var[ mu_N ] = sum(Var[ s*rchisq(k_0/N) ])
#             = s^2 * Var(chi_squared(N)
#             = s^2 * 2 * k_0
#             = 2*s* E[mu_n]
generate_data_mean_var <- function(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq) {
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
# mean is uniform on [0,100]
# variance is uniform [0,2*mean_mu_n]  (much larger stddev than means seems unlikely here)
generate_data_including_hyperparameters <- function(N) {
print(mean_mu_N <- runif(1)*1000)
print(sigma_mu_N <- runif(1)*mean_mu_N)
print(sigma_0 <- runif(1)*100)
sigma_mu_N_sq <- sigma_mu_N**2
sigma_0_sq <- sigma_0**2
s = sigma_mu_N_sq / (2 * mean_mu_N)
k_0 = mean_mu_N / s
generate_data(k_0, s, N, sigma_0_sq)
}
source("data generation function.R")
setwd(Sys.getenv("GITHUB_PATH"))
setwd("./misc/stan models/increasing by chi square increments/")
source("data generation function.R")
samples <- ldply(1:20, function(x) {
fake_data <- generate_data_including_hyperparameters(50)
fake_data$sample_number <- x
fake_data
})
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
seed.seed(38738)
set.seed(38738)
samples <- ldply(1:20, function(x) {
fake_data <- generate_data_including_hyperparameters(50)
fake_data$sample_number <- x
fake_data
})
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
set.seed(38733)
samples <- ldply(1:20, function(x) {
fake_data <- generate_data_including_hyperparameters(50)
fake_data$sample_number <- x
fake_data
})
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
ggplot() + geom_line(data=samples, mapping=aes(x=t,y=mu, color="mu", group=sample_number))
for (i in 1:4) {
plot_fake_data(generate_data_including_hyperparameters(20))
}
fake_data <- generate_data_mean_var(10, 10, 200, 1)
plot_fake_data(fake_data)
samples <- sapply(1:1000, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq)$mu[N])
mean(samples)
var(samples)
mean_mu_N = 10
sigma_mu_N_sq = 10
N = 20
sigma_0_sq = 1
samples <- sapply(1:1000, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq)$mu[N])
mean(samples)
var(samples)
mean_mu_N <- 20
samples <- sapply(1:1000, function(x) generate_data_mean_var(mean_mu_N, sigma_mu_N_sq, N, sigma_0_sq)$mu[N])
mean(samples)
var(samples)
